%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Tue Feb  5 08:44:09 2019
%%BoundingBox: 66 530 520 650
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (KRAS-WT)
} def

/sequence { (\
AUGACUGAAUAUAAACUUGUGGUAGUUGGAGCUGGUGGCGUAGGCAAGAGUGCCUUGACGAUACAGCUAAUUCAG\
) } def

/len { sequence length } bind def

/winSize 75 def
292 416 translate
72 6 mul len 1 add winSize add 2 sqrt mul div dup scale
/Helvetica findfont 0.95 scalefont setfont

/drawseq_turn {% print sequence at bottom
   gsave
   len 2 sqrt div dup neg 0.28 add exch 0.78 sub translate
    0 1 len 1 sub {
     dup dup 2 sqrt mul 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
} bind def
/drawgrid_turn{
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {    %for (0, gridspacing, len) 
     dup dup      %duplicate what - gridspacing??
     dup len exch sub moveto     %moveto diagonal?
     dup winSize gt
     {dup dup len exch sub winSize add lineto}
     {dup len lineto}ifelse
     dup len exch sub moveto  %moveto diagonal?
     dup len winSize sub le
     {dup dup len exch sub dup winSize exch sub len add exch lineto}
     {dup dup len exch sub len exch lineto}ifelse     stroke pop pop
  } for
  len log 0.9 sub cvi 10 exch exp  % grid spacing
      dup 1 gt {
          dup dup 20 div dup 2 array astore exch 40 div setdash
      } { [0.3 0.7] 0.1 setdash } ifelse
      0 exch len {    %for (0, gridspacing, len) 
     dup dup      %duplicate what - gridspacing??
     dup len exch sub moveto     %moveto diagonal?
     len exch sub 0.7 sub exch 0.7 sub exch lineto
     stroke
   }for
 winSize len moveto  len winSize  lineto stroke
  [] 0 setdash
  0.04 setlinewidth 
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
   stroke
  } if
  0.5 neg dup translate
} bind def 

0.5 dup translate
drawseq_turn
45 rotate


%draw the grid
drawgrid_turn

%start of base pair probability data
2 28 0.198600000 ubox
3 27 0.352328824 ubox
4 26 0.371962149 ubox
5 25 0.375092295 ubox
5 75 0.379358669 ubox
6 24 0.373363094 ubox
6 74 0.385379605 ubox
7 23 0.351225981 ubox
7 73 0.386676803 ubox
8 72 0.388804900 ubox
9 20 0.251200000 ubox
9 71 0.404108636 ubox
10 19 0.252800000 ubox
10 21 0.294300000 ubox
10 70 0.385742414 ubox
11 18 0.249100000 ubox
11 20 0.300900000 ubox
11 68 0.104100000 ubox
12 19 0.300500000 ubox
12 28 0.102900000 ubox
12 69 0.608600000 ubox
13 18 0.274800000 ubox
13 68 0.601700000 ubox
14 27 0.794423143 ubox
14 68 0.229500000 ubox
15 23 0.135200000 ubox
15 26 0.842893588 ubox
15 68 0.138300000 ubox
16 22 0.140300000 ubox
16 25 0.851269434 ubox
16 66 0.500600000 ubox
17 21 0.126500000 ubox
17 24 0.836814101 ubox
17 65 0.427200000 ubox
17 66 0.640400000 ubox
18 63 0.483700000 ubox
18 65 0.736300000 ubox
19 30 0.113300000 ubox
19 62 0.509600000 ubox
19 64 0.783300000 ubox
20 29 0.113300000 ubox
20 61 0.511600000 ubox
20 63 0.781100000 ubox
21 62 0.762900000 ubox
22 59 0.530500000 ubox
22 62 0.108300000 ubox
23 58 0.522500000 ubox
23 61 0.143200000 ubox
25 56 0.107700000 ubox
25 59 0.748500000 ubox
26 58 0.744900000 ubox
27 57 0.681800000 ubox
28 54 0.935200000 ubox
28 73 0.129400000 ubox
29 53 0.938200000 ubox
29 72 0.127400000 ubox
30 52 0.938200000 ubox
30 68 0.962200000 ubox
31 51 0.937900000 ubox
31 67 0.944493234 ubox
32 50 0.938200000 ubox
32 66 0.944497152 ubox
33 49 0.929900000 ubox
33 65 0.938878480 ubox
34 64 0.875558696 ubox
35 62 0.371932897 ubox
35 64 0.348072909 ubox
36 46 0.350500000 ubox
36 47 0.145400000 ubox
36 61 0.405345840 ubox
36 63 0.481218402 ubox
37 45 0.321500000 ubox
37 62 0.378440907 ubox
38 45 0.879500000 ubox
38 59 0.420160922 ubox
39 43 0.242400000 ubox
39 44 0.894200000 ubox
39 57 0.377838206 ubox
39 60 0.828544054 ubox
40 56 0.351922605 ubox
40 59 0.829923394 ubox
41 57 0.150600000 ubox
41 58 0.782901271 ubox
42 55 0.886915193 ubox
42 56 0.149100000 ubox
43 54 0.937672779 ubox
44 53 0.937955649 ubox
45 52 0.937955649 ubox
46 51 0.815779382 ubox
showpage
end
%%EOF
